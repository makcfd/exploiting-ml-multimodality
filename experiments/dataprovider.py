import pandas as pd
import numpy as np
from torch.utils.data import Dataset
from torch.utils.data import DataLoader
import torch

class Data(Dataset):
  def __init__(self, X, y):
    # need to convert float64 to float32 else 
    # will get the following error
    # RuntimeError: expected scalar type Double but found Float
    X = X.values
    y = y.values
    self.X = torch.from_numpy(X.astype(np.float32))
    # need to convert float64 to Long else 
    # will get the following error
    # RuntimeError: expected scalar type Long but found Float
    self.y = torch.from_numpy(y).type(torch.LongTensor)
    self.len = self.X.shape[0]
  
  def __getitem__(self, index):
    return self.X[index], self.y[index]
  def __len__(self):
    return self.len

def get_data(directory: str, batch_size: int = 32) -> DataLoader:
    # cfg.batch_size
    X = pd.read_csv(directory + "X.csv", index_col=0)
    y = pd.read_csv(directory + "Y.csv", index_col=0)

    data = Data(X, y)
    loader = DataLoader(
                        data, 
                        batch_size=batch_size, 
                        shuffle=True, 
                        # num_workers=num_workers,
                        )
    return loader