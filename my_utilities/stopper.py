import numpy as np
from my_utilities.bcolors import bcolors


class EarlyStopper:
    def __init__(self, patience=1, min_delta=0, decreasing=True):
        self.patience = patience
        self.min_delta = min_delta
        self.counter = 0
        self.min_metric_value = np.inf
        self.max_metric_value = 0.0
        self.decreasing = decreasing

    def early_stop(self, validation_metric):
        if self.decreasing:
            if validation_metric < self.min_validation_loss:
                self.min_validation_loss = validation_metric
                self.counter = 0
            elif validation_metric > (self.min_validation_loss + self.min_delta):
                self.counter += 1
                if self.counter >= self.patience:
                    return True
            return False
        elif not self.decreasing:
            if validation_metric > self.max_metric_value:
                self.max_metric_value = validation_metric
                self.counter = 0
            elif validation_metric < (self.max_metric_value + self.min_delta):
                self.counter += 1
                if self.counter >= self.patience:
                    print(
                        f"{bcolors.WARNING}Warning: Early stopping triggered. Patience of {self.patience} reached. {bcolors.ENDC}"
                    )
                    return True
            return False
