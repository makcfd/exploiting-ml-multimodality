import os
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler


df = pd.read_csv("/exploiting_model_multiplicity/data/original/cancer_risk.csv")
df.drop_duplicates(inplace=True)
df = df.replace("?", np.nan)
df = df.apply(pd.to_numeric, errors="coerce")
df["Number of sexual partners"] = df["Number of sexual partners"].fillna(
    df["Number of sexual partners"].median()
)
df["First sexual intercourse"] = df["First sexual intercourse"].fillna(
    df["First sexual intercourse"].median()
)
df["Num of pregnancies"] = df["Num of pregnancies"].fillna(
    df["Num of pregnancies"].median()
)
df["Smokes"] = df["Smokes"].fillna(1)
df["Smokes (years)"] = df["Smokes (years)"].fillna(df["Smokes (years)"].median())
df["Smokes (packs/year)"] = df["Smokes (packs/year)"].fillna(
    df["Smokes (packs/year)"].median()
)
df["Hormonal Contraceptives"] = df["Hormonal Contraceptives"].fillna(1)
df["Hormonal Contraceptives (years)"] = df["Hormonal Contraceptives (years)"].fillna(
    df["Hormonal Contraceptives (years)"].median()
)
df["IUD"] = df["IUD"].fillna(0)
df["IUD (years)"] = df["IUD (years)"].fillna(0)
df["STDs"] = df["STDs"].fillna(1)
df["STDs (number)"] = df["STDs (number)"].fillna(df["STDs (number)"].median())
df["STDs:condylomatosis"] = df["STDs:condylomatosis"].fillna(
    df["STDs:condylomatosis"].median()
)
df["STDs:cervical condylomatosis"] = df["STDs:cervical condylomatosis"].fillna(
    df["STDs:cervical condylomatosis"].median()
)
df["STDs:vaginal condylomatosis"] = df["STDs:vaginal condylomatosis"].fillna(
    df["STDs:vaginal condylomatosis"].median()
)
df["STDs:vulvo-perineal condylomatosis"] = df[
    "STDs:vulvo-perineal condylomatosis"
].fillna(df["STDs:vulvo-perineal condylomatosis"].median())
df["STDs:syphilis"] = df["STDs:syphilis"].fillna(df["STDs:syphilis"].median())
df["STDs:pelvic inflammatory disease"] = df["STDs:pelvic inflammatory disease"].fillna(
    df["STDs:pelvic inflammatory disease"].median()
)
df["STDs:genital herpes"] = df["STDs:genital herpes"].fillna(
    df["STDs:genital herpes"].median()
)
df["STDs:molluscum contagiosum"] = df["STDs:molluscum contagiosum"].fillna(
    df["STDs:molluscum contagiosum"].median()
)
df["STDs:AIDS"] = df["STDs:AIDS"].fillna(df["STDs:AIDS"].median())
df["STDs:HIV"] = df["STDs:HIV"].fillna(df["STDs:HIV"].median())
df["STDs:Hepatitis B"] = df["STDs:Hepatitis B"].fillna(df["STDs:Hepatitis B"].median())
df["STDs:HPV"] = df["STDs:HPV"].fillna(df["STDs:HPV"].median())
df["STDs: Time since first diagnosis"] = df["STDs: Time since first diagnosis"].fillna(
    df["STDs: Time since first diagnosis"].median()
)
df["STDs: Time since last diagnosis"] = df["STDs: Time since last diagnosis"].fillna(
    df["STDs: Time since last diagnosis"].median()
)

features = df.drop(["Biopsy", "Hinselmann", "Schiller", "Citology"], axis=1)
target = df["Biopsy"]


numeric = [
    "Age",
    "Number of sexual partners",
    "First sexual intercourse",
    "Num of pregnancies",
    "Smokes (years)",
    "Smokes (packs/year)",
    "Hormonal Contraceptives (years)",
    "IUD (years)",
    "STDs (number)",
    "STDs:condylomatosis",
    "STDs:cervical condylomatosis",
    "STDs:vaginal condylomatosis",
    "STDs:vulvo-perineal condylomatosis",
    "STDs:syphilis",
    "STDs:pelvic inflammatory disease",
    "STDs:genital herpes",
    "STDs:molluscum contagiosum",
    "STDs:AIDS",
    "STDs:HIV",
    "STDs:Hepatitis B",
    "STDs:HPV",
    "STDs: Time since first diagnosis",
    "STDs: Time since last diagnosis",
]

X_train, X_test, Y_train, Y_test = train_test_split(
    features, target, train_size=0.8, test_size=0.2, random_state=42, shuffle=False
)
scaler_train = StandardScaler()
scaler_train.fit(X_train[numeric])
X_train[numeric] = scaler_train.transform(X_train[numeric])

X_test[numeric] = scaler_train.transform(X_test[numeric])
paths_to_save = ["../cancer_risk_2/train/", "../cancer_risk_2/test/"]

for path in paths_to_save:
    if not os.path.exists(path):
        os.makedirs(path)
X_train.to_csv("../cancer_risk_2/train/X.csv", index=True)
Y_train.to_csv("../cancer_risk_2/train/Y.csv", index=True)
X_test.to_csv("../cancer_risk_2/test/X.csv", index=True)
Y_test.to_csv("../cancer_risk_2/test/Y.csv", index=True)
